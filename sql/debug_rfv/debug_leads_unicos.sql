-- ========================================
-- 游댌 CONTAGEM DE LEADS 칔NICOS - SIMPLES E DIRETO
-- ========================================

-- 1. 游늵 TOTAL DE LEADS 칔NICOS (TODOS OS STATUS)
SELECT 
    'Total de Leads 칔nicos (Todos Status)' as tipo,
    COUNT(DISTINCT lead_id) as total_leads_unicos
FROM api.oportunidade_sprint
WHERE archived = 0 
    AND lead_id IS NOT NULL 
    AND lead_id > 0;

-- 2. 游늵 LEADS 칔NICOS POR STATUS
SELECT 
    'Leads 칔nicos por Status' as tipo,
    status,
    COUNT(DISTINCT lead_id) as total_leads_unicos
FROM api.oportunidade_sprint
WHERE archived = 0 
    AND lead_id IS NOT NULL 
    AND lead_id > 0
GROUP BY status
ORDER BY total_leads_unicos DESC;

-- 3. 游늵 LEADS 칔NICOS GANHOS (STATUS 'gain')
SELECT 
    'Leads 칔nicos Ganhos (Status gain)' as tipo,
    COUNT(DISTINCT lead_id) as total_leads_ganhos
FROM api.oportunidade_sprint
WHERE archived = 0 
    AND status = 'gain'
    AND lead_id IS NOT NULL 
    AND lead_id > 0;

-- 4. 游늵 LEADS 칔NICOS GANHOS NO ANO DE 2025
SELECT 
    'Leads 칔nicos Ganhos (2025)' as tipo,
    COUNT(DISTINCT lead_id) as total_leads_2025
FROM api.oportunidade_sprint
WHERE archived = 0 
    AND status = 'gain'
    AND gain_date >= '2025-01-01' 
    AND gain_date <= '2025-12-31'
    AND lead_id IS NOT NULL 
    AND lead_id > 0;

-- 5. 游늵 LEADS 칔NICOS GANHOS POR PER칈ODO
SELECT 
    'Leads 칔nicos por Per칤odo' as tipo,
    'Janeiro-Mar칞o 2025' as periodo,
    COUNT(DISTINCT lead_id) as total_leads
FROM api.oportunidade_sprint
WHERE archived = 0 
    AND status = 'gain'
    AND gain_date >= '2025-01-01' 
    AND gain_date <= '2025-03-31'
    AND lead_id IS NOT NULL 
    AND lead_id > 0

UNION ALL

SELECT 
    'Leads 칔nicos por Per칤odo' as tipo,
    'Abril-Junho 2025' as periodo,
    COUNT(DISTINCT lead_id) as total_leads
FROM api.oportunidade_sprint
WHERE archived = 0 
    AND status = 'gain'
    AND gain_date >= '2025-04-01' 
    AND gain_date <= '2025-06-30'
    AND lead_id IS NOT NULL 
    AND lead_id > 0

UNION ALL

SELECT 
    'Leads 칔nicos por Per칤odo' as tipo,
    'Julho-Setembro 2025' as periodo,
    COUNT(DISTINCT lead_id) as total_leads
FROM api.oportunidade_sprint
WHERE archived = 0 
    AND status = 'gain'
    AND gain_date >= '2025-07-01' 
    AND gain_date <= '2025-09-30'
    AND lead_id IS NOT NULL 
    AND lead_id > 0

UNION ALL

SELECT 
    'Leads 칔nicos por Per칤odo' as tipo,
    'Outubro-Dezembro 2025' as periodo,
    COUNT(DISTINCT lead_id) as total_leads
FROM api.oportunidade_sprint
WHERE archived = 0 
    AND status = 'gain'
    AND gain_date >= '2025-10-01' 
    AND gain_date <= '2025-12-31'
    AND lead_id IS NOT NULL 
    AND lead_id > 0

ORDER BY periodo;

-- 6. 游댌 VERIFICAR LEADS COM PROBLEMAS (NULL ou INV츼LIDOS)
SELECT 
    'Verifica칞칚o de Leads com Problemas' as tipo,
    CASE 
        WHEN lead_id IS NULL THEN 'lead_id NULL'
        WHEN lead_id <= 0 THEN 'lead_id inv치lido (<= 0)'
        ELSE 'lead_id v치lido'
    END as status_lead_id,
    COUNT(*) as quantidade_registros,
    COUNT(DISTINCT lead_id) as leads_unicos
FROM api.oportunidade_sprint 
WHERE archived = 0
GROUP BY 
    CASE 
        WHEN lead_id IS NULL THEN 'lead_id NULL'
        WHEN lead_id <= 0 THEN 'lead_id inv치lido (<= 0)'
        ELSE 'lead_id v치lido'
    END;

-- 7. 游늵 RESUMO FINAL - COMPARA칂츾O
SELECT 
    'RESUMO FINAL - Compara칞칚o de Leads' as tipo,
    (SELECT COUNT(DISTINCT lead_id) FROM api.oportunidade_sprint WHERE archived = 0 AND lead_id IS NOT NULL AND lead_id > 0) as total_leads_unicos_todos_status,
    (SELECT COUNT(DISTINCT lead_id) FROM api.oportunidade_sprint WHERE archived = 0 AND status = 'gain' AND lead_id IS NOT NULL AND lead_id > 0) as total_leads_unicos_ganhos,
    (SELECT COUNT(DISTINCT lead_id) FROM api.oportunidade_sprint WHERE archived = 0 AND status = 'gain' AND gain_date >= '2025-01-01' AND gain_date <= '2025-12-31' AND lead_id IS NOT NULL AND lead_id > 0) as total_leads_unicos_2025;
