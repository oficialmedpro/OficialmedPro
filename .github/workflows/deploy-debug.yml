name: Debug Build with Supabase Secrets

on:
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: 'true'
        type: boolean

env:
  DOCKER_IMAGE: oficialmedpro/oficialmed-pwa
  DOCKER_TAG: debug

jobs:
  debug-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug - Show available secrets (masked)
      run: |
        echo "🔍 Verificando secrets disponíveis:"
        echo "VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL != '' && 'DISPONÍVEL' || 'NÃO ENCONTRADO' }}"
        echo "VITE_SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.VITE_SUPABASE_SERVICE_ROLE_KEY != '' && 'DISPONÍVEL' || 'NÃO ENCONTRADO' }}"
        echo "VITE_SUPABASE_SCHEMA: ${{ secrets.VITE_SUPABASE_SCHEMA != '' && 'DISPONÍVEL' || 'NÃO ENCONTRADO' }}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Create .env file for debugging
      run: |
        echo "🔧 Criando arquivo .env com as secrets:"
        echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" > .env.production
        echo "VITE_SUPABASE_SERVICE_ROLE_KEY=${{ secrets.VITE_SUPABASE_SERVICE_ROLE_KEY }}" >> .env.production
        echo "VITE_SUPABASE_SCHEMA=${{ secrets.VITE_SUPABASE_SCHEMA }}" >> .env.production
        echo "📄 Arquivo criado com $(wc -l < .env.production) linhas"

    - name: Build Docker image with multiple approaches
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_SERVICE_ROLE_KEY=${{ secrets.VITE_SUPABASE_SERVICE_ROLE_KEY }}
          VITE_SUPABASE_SCHEMA=${{ secrets.VITE_SUPABASE_SCHEMA }}

    - name: Notify build completion
      run: |
        echo "✅ Build de debug concluído!"
        echo "🐳 Imagem: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"
        echo "🔍 Verifique os logs do build para ver se as variáveis foram recebidas"