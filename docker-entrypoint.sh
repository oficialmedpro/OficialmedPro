#!/bin/sh

# Script para ler secrets do Docker Swarm e definir vari√°veis de ambiente
echo "üîß Carregando secrets do Docker Swarm..."

# Debug: listar todos os secrets dispon√≠veis
echo "üìã Secrets dispon√≠veis:"
ls -la /run/secrets/ 2>/dev/null || echo "‚ùå Diret√≥rio /run/secrets n√£o encontrado"

# Ler secrets e definir vari√°veis de ambiente
if [ -f "/run/secrets/VITE_SUPABASE_URL_CORRETO" ]; then
    export VITE_SUPABASE_URL=$(cat /run/secrets/VITE_SUPABASE_URL_CORRETO)
    echo "‚úÖ VITE_SUPABASE_URL carregada do secret VITE_SUPABASE_URL_CORRETO"
elif [ -f "/run/secrets/VITE_SUPABASE_URL" ]; then
    export VITE_SUPABASE_URL=$(cat /run/secrets/VITE_SUPABASE_URL)
    echo "‚úÖ VITE_SUPABASE_URL carregada do secret VITE_SUPABASE_URL"
else
    echo "‚ö†Ô∏è Secret VITE_SUPABASE_URL n√£o encontrado"
    echo "üîç Tentando usar vari√°vel de ambiente VITE_SUPABASE_URL_FILE..."
    if [ -n "$VITE_SUPABASE_URL_FILE" ] && [ -f "$VITE_SUPABASE_URL_FILE" ]; then
        export VITE_SUPABASE_URL=$(cat "$VITE_SUPABASE_URL_FILE")
        echo "‚úÖ VITE_SUPABASE_URL carregada de $VITE_SUPABASE_URL_FILE"
    fi
fi

if [ -f "/run/secrets/VITE_SUPABASE_SERVICE_ROLE_KEY" ]; then
    export VITE_SUPABASE_SERVICE_ROLE_KEY=$(cat /run/secrets/VITE_SUPABASE_SERVICE_ROLE_KEY)
    echo "‚úÖ VITE_SUPABASE_SERVICE_ROLE_KEY carregada do secret"
else
    echo "‚ö†Ô∏è Secret VITE_SUPABASE_SERVICE_ROLE_KEY n√£o encontrado"
    echo "üîç Tentando usar vari√°vel de ambiente VITE_SUPABASE_SERVICE_ROLE_KEY_FILE..."
    if [ -n "$VITE_SUPABASE_SERVICE_ROLE_KEY_FILE" ] && [ -f "$VITE_SUPABASE_SERVICE_ROLE_KEY_FILE" ]; then
        export VITE_SUPABASE_SERVICE_ROLE_KEY=$(cat "$VITE_SUPABASE_SERVICE_ROLE_KEY_FILE")
        echo "‚úÖ VITE_SUPABASE_SERVICE_ROLE_KEY carregada de $VITE_SUPABASE_SERVICE_ROLE_KEY_FILE"
    fi
fi

if [ -f "/run/secrets/VITE_SUPABASE_SCHEMA" ]; then
    export VITE_SUPABASE_SCHEMA=$(cat /run/secrets/VITE_SUPABASE_SCHEMA)
    echo "‚úÖ VITE_SUPABASE_SCHEMA carregada do secret"
else
    echo "‚ö†Ô∏è Secret VITE_SUPABASE_SCHEMA n√£o encontrado"
    echo "üîç Tentando usar vari√°vel de ambiente VITE_SUPABASE_SCHEMA_FILE..."
    if [ -n "$VITE_SUPABASE_SCHEMA_FILE" ] && [ -f "$VITE_SUPABASE_SCHEMA_FILE" ]; then
        export VITE_SUPABASE_SCHEMA=$(cat "$VITE_SUPABASE_SCHEMA_FILE")
        echo "‚úÖ VITE_SUPABASE_SCHEMA carregada de $VITE_SUPABASE_SCHEMA_FILE"
    fi
fi

# Log das vari√°veis (sem mostrar valores sens√≠veis)
echo "üîç Vari√°veis carregadas:"
echo "  VITE_SUPABASE_URL: ${VITE_SUPABASE_URL:0:30}..."
echo "  VITE_SUPABASE_SERVICE_ROLE_KEY: ${VITE_SUPABASE_SERVICE_ROLE_KEY:0:20}..."
echo "  VITE_SUPABASE_SCHEMA: $VITE_SUPABASE_SCHEMA"

# Injetar vari√°veis no HTML para o frontend acessar
echo "üîß Injetando vari√°veis no HTML..."
echo "üìÑ Verificando arquivo HTML antes da modifica√ß√£o..."
ls -la /usr/share/nginx/html/index.html

# Backup do arquivo original
cp /usr/share/nginx/html/index.html /usr/share/nginx/html/index.html.backup

# Verificar se as vari√°veis t√™m valores v√°lidos
if [ -z "$VITE_SUPABASE_URL" ] || [ "$VITE_SUPABASE_URL" = "..." ] || [ "$VITE_SUPABASE_URL" = "undefined" ] || [ "$VITE_SUPABASE_URL" = "null" ]; then
    echo "‚ùå VITE_SUPABASE_URL est√° vazia ou inv√°lida"
    echo "üîß Usando fallback embutido na imagem"
    # N√£o injetar vari√°veis, deixar usar os fallbacks
else
    echo "‚úÖ VITE_SUPABASE_URL v√°lida: ${VITE_SUPABASE_URL:0:30}..."
    
    # Escapar caracteres especiais para o sed
    ESCAPED_URL=$(echo "$VITE_SUPABASE_URL" | sed 's/[[\.*^$()+?{|]/\\&/g')
    ESCAPED_KEY=$(echo "$VITE_SUPABASE_SERVICE_ROLE_KEY" | sed 's/[[\.*^$()+?{|]/\\&/g')
    ESCAPED_SCHEMA=$(echo "$VITE_SUPABASE_SCHEMA" | sed 's/[[\.*^$()+?{|]/\\&/g')
    
    # Injetar as vari√°veis
    sed -i "s|</head>|<script>window.ENV = { VITE_SUPABASE_URL: '${ESCAPED_URL}', VITE_SUPABASE_SERVICE_ROLE_KEY: '${ESCAPED_KEY}', VITE_SUPABASE_SCHEMA: '${ESCAPED_SCHEMA}' };</script></head>|" /usr/share/nginx/html/index.html
    
    echo "üìÑ Verificando se a modifica√ß√£o foi aplicada..."
    grep -o "window.ENV" /usr/share/nginx/html/index.html && echo "‚úÖ window.ENV encontrado no HTML" || echo "‚ùå window.ENV N√ÉO encontrado no HTML"
fi

# Executar o comando original
echo "üöÄ Iniciando aplica√ß√£o..."
exec "$@"