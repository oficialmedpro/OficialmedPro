#!/bin/bash

# üöÄ SCRIPT DE DEPLOY DA SINCRONIZA√á√ÉO AUTOM√ÅTICA
# 
# Este script configura a sincroniza√ß√£o autom√°tica na VPS
# Executa nos hor√°rios: 8:00, 9:50, 11:50, 13:50, 15:50, 17:50, 19:50, 20:50 (Bras√≠lia)

echo "üöÄ INICIANDO DEPLOY DA SINCRONIZA√á√ÉO AUTOM√ÅTICA"
echo "=============================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ]; then
    echo "‚ùå Erro: Execute este script na raiz do projeto"
    exit 1
fi

# Verificar se as vari√°veis de ambiente est√£o configuradas
if [ -z "$VITE_SUPABASE_URL" ] || [ -z "$VITE_SUPABASE_SERVICE_ROLE_KEY" ]; then
    echo "‚ùå Erro: Vari√°veis de ambiente n√£o configuradas"
    echo "Configure VITE_SUPABASE_URL e VITE_SUPABASE_SERVICE_ROLE_KEY"
    exit 1
fi

echo "‚úÖ Vari√°veis de ambiente configuradas"

# Instalar depend√™ncias se necess√°rio
if [ ! -d "node_modules" ]; then
    echo "üì¶ Instalando depend√™ncias..."
    npm install
fi

# Verificar se o arquivo de sincroniza√ß√£o existe
if [ ! -f "src/sincronizacao/sync-now.js" ]; then
    echo "‚ùå Erro: Arquivo sync-now.js n√£o encontrado"
    exit 1
fi

echo "‚úÖ Arquivos de sincroniza√ß√£o encontrados"

# Criar script de inicializa√ß√£o da sincroniza√ß√£o agendada
cat > start-scheduled-sync.js << 'EOF'
#!/usr/bin/env node

/**
 * üïê INICIADOR DA SINCRONIZA√á√ÉO AGENDADA
 * 
 * Este script inicia o servi√ßo de sincroniza√ß√£o agendada
 * Executa nos hor√°rios: 8:00, 9:50, 11:50, 13:50, 15:50, 17:50, 19:50, 20:50 (Bras√≠lia)
 */

import scheduledSyncService from './src/service/scheduledSyncService.js';

console.log('üöÄ Iniciando servi√ßo de sincroniza√ß√£o agendada...');
console.log('‚è∞ Hor√°rios: 8:00, 9:50, 11:50, 13:50, 15:50, 17:50, 19:50, 20:50 (Bras√≠lia)');

// Iniciar o servi√ßo
scheduledSyncService.start();

// Manter o processo rodando
process.on('SIGINT', () => {
    console.log('üì¥ Parando servi√ßo de sincroniza√ß√£o agendada...');
    scheduledSyncService.stop();
    process.exit(0);
});

process.on('SIGTERM', () => {
    console.log('üì¥ Parando servi√ßo de sincroniza√ß√£o agendada...');
    scheduledSyncService.stop();
    process.exit(0);
});

// Manter o processo vivo
setInterval(() => {
    // Verificar se o servi√ßo ainda est√° rodando
    const status = scheduledSyncService.getStatus();
    if (!status.isRunning) {
        console.log('‚ö†Ô∏è Servi√ßo parou inesperadamente, reiniciando...');
        scheduledSyncService.start();
    }
}, 60000); // Verificar a cada minuto
EOF

echo "‚úÖ Script de inicializa√ß√£o criado"

# Tornar o script execut√°vel
chmod +x start-scheduled-sync.js

# Criar script de teste
cat > test-scheduled-sync.js << 'EOF'
#!/usr/bin/env node

/**
 * üß™ TESTE DA SINCRONIZA√á√ÉO AGENDADA
 */

import scheduledSyncService from './src/service/scheduledSyncService.js';

console.log('üß™ TESTANDO SINCRONIZA√á√ÉO AGENDADA');
console.log('==================================');

// Testar status
const status = scheduledSyncService.getStatus();
console.log('üìä Status:', status);

// Testar pr√≥ximos hor√°rios
const nextTimes = scheduledSyncService.getNextSyncTimes();
console.log('‚è∞ Pr√≥ximos hor√°rios:', nextTimes);

// Testar sincroniza√ß√£o for√ßada
console.log('üîÑ Testando sincroniza√ß√£o for√ßada...');
scheduledSyncService.forceSync().then(result => {
    console.log('‚úÖ Resultado:', result);
    process.exit(0);
}).catch(error => {
    console.error('‚ùå Erro:', error);
    process.exit(1);
});
EOF

chmod +x test-scheduled-sync.js

echo "‚úÖ Script de teste criado"

# Criar arquivo de configura√ß√£o para o Portainer
cat > portainer-scheduled-sync.yml << 'EOF'
version: '3.8'

services:
  scheduled-sync:
    image: node:18-alpine
    container_name: oficialmed-scheduled-sync
    restart: unless-stopped
    working_dir: /app
    volumes:
      - .:/app
    environment:
      - NODE_ENV=production
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_SERVICE_ROLE_KEY=${VITE_SUPABASE_SERVICE_ROLE_KEY}
      - VITE_SPRINTHUB_BASE_URL=${VITE_SPRINTHUB_BASE_URL}
      - VITE_SPRINTHUB_API_TOKEN=${VITE_SPRINTHUB_API_TOKEN}
      - VITE_SPRINTHUB_INSTANCE=${VITE_SPRINTHUB_INSTANCE}
    command: node start-scheduled-sync.js
    networks:
      - oficialmed-network
    depends_on:
      - api

  api:
    build: ./api
    container_name: oficialmed-api
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
      - VITE_SUPABASE_SERVICE_ROLE_KEY=${VITE_SUPABASE_SERVICE_ROLE_KEY}
      - VITE_SPRINTHUB_BASE_URL=${VITE_SPRINTHUB_BASE_URL}
      - VITE_SPRINTHUB_API_TOKEN=${VITE_SPRINTHUB_API_TOKEN}
      - VITE_SPRINTHUB_INSTANCE=${VITE_SPRINTHUB_INSTANCE}
    networks:
      - oficialmed-network

networks:
  oficialmed-network:
    external: true
EOF

echo "‚úÖ Arquivo de configura√ß√£o do Portainer criado"

# Criar script de monitoramento
cat > monitor-scheduled-sync.sh << 'EOF'
#!/bin/bash

# üìä MONITOR DA SINCRONIZA√á√ÉO AGENDADA

echo "üìä MONITOR DA SINCRONIZA√á√ÉO AGENDADA"
echo "===================================="

# Verificar se o processo est√° rodando
if pgrep -f "start-scheduled-sync.js" > /dev/null; then
    echo "‚úÖ Servi√ßo de sincroniza√ß√£o agendada est√° rodando"
else
    echo "‚ùå Servi√ßo de sincroniza√ß√£o agendada N√ÉO est√° rodando"
fi

# Mostrar logs recentes
echo ""
echo "üìã Logs recentes:"
tail -n 20 src/sincronizacao/hourly-sync.log 2>/dev/null || echo "Nenhum log encontrado"

# Mostrar status
echo ""
echo "üìä Status atual:"
node -e "
import scheduledSyncService from './src/service/scheduledSyncService.js';
const status = scheduledSyncService.getStatus();
console.log('Rodando:', status.isRunning);
console.log('√öltima sync:', status.lastSyncTime);
console.log('Pr√≥xima sync:', status.nextSyncTime);
" 2>/dev/null || echo "Erro ao obter status"
EOF

chmod +x monitor-scheduled-sync.sh

echo "‚úÖ Script de monitoramento criado"

echo ""
echo "üéâ DEPLOY CONCLU√çDO!"
echo "===================="
echo ""
echo "üìã PR√ìXIMOS PASSOS:"
echo "1. Teste o servi√ßo: node test-scheduled-sync.js"
echo "2. Inicie o servi√ßo: node start-scheduled-sync.js"
echo "3. Monitore: ./monitor-scheduled-sync.sh"
echo "4. Para Portainer: use portainer-scheduled-sync.yml"
echo ""
echo "‚è∞ HOR√ÅRIOS DE SINCRONIZA√á√ÉO:"
echo "8:00, 9:50, 11:50, 13:50, 15:50, 17:50, 19:50, 20:50 (Bras√≠lia)"
echo ""
echo "üîß COMANDOS √öTEIS:"
echo "- Iniciar: node start-scheduled-sync.js"
echo "- Testar: node test-scheduled-sync.js"
echo "- Monitorar: ./monitor-scheduled-sync.sh"
echo "- Parar: pkill -f start-scheduled-sync.js"
