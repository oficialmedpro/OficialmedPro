// Teste simples para verificar se as vari√°veis chegam no build
console.log('üîç Teste de Vari√°veis de Ambiente:');
console.log('MODE:', import.meta.env.MODE);

// Testar import.meta.env
console.log('VITE_SUPABASE_URL (import.meta.env):', import.meta.env.VITE_SUPABASE_URL ? 'ENCONTRADA' : 'N√ÉO ENCONTRADA');
console.log('VITE_SUPABASE_SERVICE_ROLE_KEY (import.meta.env):', import.meta.env.VITE_SUPABASE_SERVICE_ROLE_KEY ? 'ENCONTRADA' : 'N√ÉO ENCONTRADA');
console.log('VITE_SUPABASE_SCHEMA (import.meta.env):', import.meta.env.VITE_SUPABASE_SCHEMA ? 'ENCONTRADA' : 'N√ÉO ENCONTRADA');

// Testar window.ENV (injetado pelo docker-entrypoint.sh)
console.log('VITE_SUPABASE_URL (window.ENV):', window.ENV?.VITE_SUPABASE_URL ? 'ENCONTRADA' : 'N√ÉO ENCONTRADA');
console.log('VITE_SUPABASE_SERVICE_ROLE_KEY (window.ENV):', window.ENV?.VITE_SUPABASE_SERVICE_ROLE_KEY ? 'ENCONTRADA' : 'N√ÉO ENCONTRADA');
console.log('VITE_SUPABASE_SCHEMA (window.ENV):', window.ENV?.VITE_SUPABASE_SCHEMA ? 'ENCONTRADA' : 'N√ÉO ENCONTRADA');

// Verificar se pelo menos uma fonte tem as vari√°veis
const hasFromImportMeta = !!(import.meta.env.VITE_SUPABASE_URL && import.meta.env.VITE_SUPABASE_SERVICE_ROLE_KEY);
const hasFromWindowEnv = !!(window.ENV?.VITE_SUPABASE_URL && window.ENV?.VITE_SUPABASE_SERVICE_ROLE_KEY);

if (hasFromImportMeta || hasFromWindowEnv) {
  console.log('‚úÖ Todas as vari√°veis Supabase encontradas');
  console.log('üìä Fonte das vari√°veis:', hasFromWindowEnv ? 'window.ENV (runtime)' : 'import.meta.env (build-time)');
} else {
  console.error('‚ùå VITE_SUPABASE_URL n√£o encontrada em nenhuma fonte - usando fallback');
}